//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSEmpresaConveniosPorAporteResp {

    public class Meta {
        public List<String> allowed_filters {get;set;}
        public List<Allowed_sorts> allowed_sorts {get;set;}
        public List<Allowed_sorts> allowed_appends {get;set;}
        public List<Allowed_sorts> allowed_fields {get;set;}
        public List<Allowed_sorts> allowed_includes {get;set;}
        public List<Allowed_sorts> default_includes {get;set;}
        public Optional_get_vars optional_get_vars {get;set;}

        public Meta(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'allowed_filters') {
                            allowed_filters = arrayOfString(parser);
                        } else if (text == 'allowed_sorts') {
                            allowed_sorts = arrayOfAllowed_sorts(parser);
                        } else if (text == 'allowed_appends') {
                            allowed_appends = arrayOfAllowed_sorts(parser);
                        } else if (text == 'allowed_fields') {
                            allowed_fields = arrayOfAllowed_sorts(parser);
                        } else if (text == 'allowed_includes') {
                            allowed_includes = arrayOfAllowed_sorts(parser);
                        } else if (text == 'default_includes') {
                            default_includes = arrayOfAllowed_sorts(parser);
                        } else if (text == 'optional_get_vars') {
                            optional_get_vars = new Optional_get_vars(parser);
                        } else {
                            System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public class Optional_get_vars {
        public List<Allowed_sorts> sortBy {get;set;}
        public List<String> sortOrder {get;set;}

        public Optional_get_vars(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'sortBy') {
                            sortBy = arrayOfAllowed_sorts(parser);
                        } else if (text == 'sortOrder') {
                            sortOrder = arrayOfString(parser);
                        } else {
                            System.debug(LoggingLevel.WARN, 'Optional_get_vars consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public class Data {
        @AuraEnabled
        public String id {get;set;}
        @AuraEnabled
        public String fecha_vigencia_desde {get;set;}
        @AuraEnabled
        public String fecha_vigencia_hasta {get;set;}
        @AuraEnabled
        public String grado {get;set;}
        @AuraEnabled
        public String prioridad {get;set;}
        @AuraEnabled
        public String importe {get;set;}
        @AuraEnabled
        public String importe_no_reconocido {get;set;}
        @AuraEnabled
        public String porcentaje {get;set;}
        @AuraEnabled
        public String porcentaje_reconocido {get;set;}
        @AuraEnabled
        public String suma_aportes {get;set;}
        @AuraEnabled
        public String agrupacion_empresa {get;set;}
        @AuraEnabled
        public String grupo_empresa {get;set;}
        @AuraEnabled
        public String empresa {get;set;}
        @AuraEnabled
        public String sucursal {get;set;}
        @AuraEnabled
        public String obra_social {get;set;}
        @AuraEnabled
        public String modelo_plan {get;set;}
        @AuraEnabled
        public String agrupacion_plan {get;set;}
        @AuraEnabled
        public String plan {get;set;}
        @AuraEnabled
        public String categoria_afiliado {get;set;}
        @AuraEnabled
        public String agrupacion_afiliado {get;set;}
        @AuraEnabled
        public String agrupacion1_afiliado {get;set;}
        @AuraEnabled
        public String agrupacion2_afiliado {get;set;}
        @AuraEnabled
        public String agrupacion3_afiliado {get;set;}
        @AuraEnabled
        public String agrupacion4_afiliado {get;set;}
        @AuraEnabled
        public String codigo_afiliado {get;set;}
        @AuraEnabled
        public String apellidos_afiliado {get;set;}
        @AuraEnabled
        public String nombres_afiliado {get;set;}

        public Data(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'id') {
                            id = parser.getText();
                        } else if (text == 'fecha_vigencia_desde') {
                            fecha_vigencia_desde = parser.getText();
                        } else if (text == 'fecha_vigencia_hasta') {
                            fecha_vigencia_hasta = parser.getText();
                        } else if (text == 'grado') {
                            grado = parser.getText();
                        } else if (text == 'prioridad') {
                            prioridad = parser.getText();
                        } else if (text == 'importe') {
                            importe = parser.getText();
                        } else if (text == 'importe_no_reconocido') {
                            importe_no_reconocido = parser.getText();
                        } else if (text == 'porcentaje') {
                            porcentaje = parser.getText();
                        } else if (text == 'porcentaje_reconocido') {
                            porcentaje_reconocido = parser.getText();
                        } else if (text == 'suma_aportes') {
                            suma_aportes = parser.getText();
                        } else if (text == 'agrupacion_empresa') {
                            agrupacion_empresa = parser.getText();
                        } else if (text == 'grupo_empresa') {
                            grupo_empresa = parser.getText();
                        } else if (text == 'empresa') {
                            empresa = parser.getText();
                        } else if (text == 'sucursal') {
                            sucursal = parser.getText();
                        } else if (text == 'obra_social') {
                            obra_social = parser.getText();
                        } else if (text == 'modelo_plan') {
                            modelo_plan = parser.getText();
                        } else if (text == 'agrupacion_plan') {
                            agrupacion_plan = parser.getText();
                        } else if (text == 'plan') {
                            plan = parser.getText();
                        } else if (text == 'categoria_afiliado') {
                            categoria_afiliado = parser.getText();
                        } else if (text == 'agrupacion_afiliado') {
                            agrupacion_afiliado = parser.getText();
                        } else if (text == 'agrupacion1_afiliado') {
                            agrupacion1_afiliado = parser.getText();
                        } else if (text == 'agrupacion2_afiliado') {
                            agrupacion2_afiliado = parser.getText();
                        } else if (text == 'agrupacion3_afiliado') {
                            agrupacion3_afiliado = parser.getText();
                        } else if (text == 'agrupacion4_afiliado') {
                            agrupacion4_afiliado = parser.getText();
                        } else if (text == 'codigo_afiliado') {
                            codigo_afiliado = parser.getText();
                        } else if (text == 'apellidos_afiliado') {
                            apellidos_afiliado = parser.getText();
                        } else if (text == 'nombres_afiliado') {
                            nombres_afiliado = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public class Allowed_sorts {

        public Allowed_sorts(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        {
                            System.debug(LoggingLevel.WARN, 'Allowed_sorts consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }

    public List<Data> data {get;set;}
    public Meta meta {get;set;}

    public WSEmpresaConveniosPorAporteResp(JSONParser parser) {
        while (parser.nextToken() != System.JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                    if (text == 'data') {
                        data = arrayOfData(parser);
                    } else if (text == 'meta') {
                        meta = new Meta(parser);
                    } else {
                        System.debug(LoggingLevel.WARN, 'WSEmpresaConveniosPorAporteResp consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }
    }


    public static WSEmpresaConveniosPorAporteResp parse(String json) {
        System.JSONParser parser = System.JSON.createParser(json);
        return new WSEmpresaConveniosPorAporteResp(parser);
    }

    public static void consumeObject(System.JSONParser parser) {
        Integer depth = 0;
        do {
            System.JSONToken curr = parser.getCurrentToken();
            if (curr == System.JSONToken.START_OBJECT ||
                    curr == System.JSONToken.START_ARRAY) {
                depth++;
            } else if (curr == System.JSONToken.END_OBJECT ||
                    curr == System.JSONToken.END_ARRAY) {
                depth--;
            }
        } while (depth > 0 && parser.nextToken() != null);
    }


    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }




    private static List<String> arrayOfString(System.JSONParser p) {
        List<String> res = new List<String>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(p.getText());
        }
        return res;
    }


    private static List<Allowed_sorts> arrayOfAllowed_sorts(System.JSONParser p) {
        List<Allowed_sorts> res = new List<Allowed_sorts>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Allowed_sorts(p));
        }
        return res;
    }
















}