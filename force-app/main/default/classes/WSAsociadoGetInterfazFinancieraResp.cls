//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSAsociadoGetInterfazFinancieraResp {

	public class Meta {
		public List<Allowed_filters> allowed_filters {get;set;} 
		public List<Allowed_filters> allowed_sorts {get;set;} 
		public List<Allowed_filters> allowed_appends {get;set;} 
		public List<Allowed_filters> allowed_fields {get;set;} 
		public List<Allowed_filters> allowed_includes {get;set;} 
		public List<Allowed_filters> default_includes {get;set;} 
		public Optional_get_vars optional_get_vars {get;set;} 

		public Meta(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'allowed_filters') {
							allowed_filters = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_sorts') {
							allowed_sorts = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_appends') {
							allowed_appends = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_fields') {
							allowed_fields = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_includes') {
							allowed_includes = arrayOfAllowed_filters(parser);
						} else if (text == 'default_includes') {
							default_includes = arrayOfAllowed_filters(parser);
						} else if (text == 'optional_get_vars') {
							optional_get_vars = new Optional_get_vars(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public List<Data> data {get;set;} 
	public Meta meta {get;set;} 

	public WSAsociadoGetInterfazFinancieraResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = arrayOfData(parser);
					} else if (text == 'meta') {
						meta = new Meta(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSAsociadoGetInterfazFinancieraResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class PageSize {
		public String p0 {get;set;} 
		public String p15 {get;set;} 
		public String p50 {get;set;} 
		public String p100 {get;set;} 

		public PageSize(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == '0') {
							p0 = parser.getText();
						} else if (text == '15') {
							p15 = parser.getText();
						} else if (text == '50') {
							p50 = parser.getText();
						} else if (text == '100') {
							p100 = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'PageSize consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Optional_get_vars {
		public List<Allowed_filters> sortBy {get;set;} 
		public List<String> sortOrder {get;set;} 
		public PageSize pageSize {get;set;} 

		public Optional_get_vars(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'sortBy') {
							sortBy = arrayOfAllowed_filters(parser);
						} else if (text == 'sortOrder') {
							sortOrder = arrayOfString(parser);
						} else if (text == 'pageSize') {
							pageSize = new PageSize(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Optional_get_vars consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Data {
		@AuraEnabled public String entidad {get;set;} 
		@AuraEnabled public String nombre_fantasia {get;set;} 
		@AuraEnabled public String razon_social {get;set;} 
		@AuraEnabled public String estado {get;set;} 
		@AuraEnabled public String solicitud {get;set;} 
		@AuraEnabled public String replicado {get;set;} 
		@AuraEnabled public String codigo_ganancias {get;set;} 
		@AuraEnabled public String secuencia_ganancias {get;set;} 
		@AuraEnabled public String regimen_ganancias {get;set;} 
		@AuraEnabled public String inscripto_ganancias {get;set;} 
		@AuraEnabled public String agente_retencion_ganancias {get;set;} 
		@AuraEnabled public String porcentaje_exencion_ganancias {get;set;} 
		@AuraEnabled public String codigo_exencion_ganancias {get;set;} 
		@AuraEnabled public String regimen_exencion_ganancias {get;set;} 
		@AuraEnabled public String resolucion_exencion_ganancias {get;set;} 
		@AuraEnabled public String fecha_desde_exencion_ganancias {get;set;} 
		@AuraEnabled public String fecha_hasta_exencion_ganancias {get;set;} 
		@AuraEnabled public String codigo_condicion_iva {get;set;} 
		@AuraEnabled public String descripcion_condicion_iva {get;set;} 
		@AuraEnabled public String agente_retencion_iva {get;set;} 
		@AuraEnabled public String codigo_regimen_iva {get;set;} 
		@AuraEnabled public String descripcion_regimen_iva {get;set;} 
		@AuraEnabled public String comprobante_iva {get;set;} 
		@AuraEnabled public String porcentaje_exencion_iva {get;set;} 
		@AuraEnabled public String codigo_exencion_iva {get;set;} 
		@AuraEnabled public String regimen_exencion_iva {get;set;} 
		@AuraEnabled public String resolucion_exencion_iva {get;set;} 
		@AuraEnabled public String fecha_desde_exencion_iva {get;set;} 
		@AuraEnabled public String fecha_hasta_exencion_iva {get;set;} 
		@AuraEnabled public String codigo_ib {get;set;} 
		@AuraEnabled public String secuencia_ib {get;set;} 
		@AuraEnabled public String regimen_ib {get;set;} 
		@AuraEnabled public String convenio_ib {get;set;} 
		@AuraEnabled public String numero_ib {get;set;} 
		@AuraEnabled public String fecha_vigencia_ib {get;set;} 
		@AuraEnabled public String provincia_ib {get;set;} 
		@AuraEnabled public String agente_retencion_ib {get;set;} 
		@AuraEnabled public String cuit_cuil_cpte {get;set;} 
		@AuraEnabled public String presenta_cpte {get;set;} 
		@AuraEnabled public String tipo_cuit_cpte {get;set;} 
		@AuraEnabled public String anses_codigo_cpte {get;set;} 
		@AuraEnabled public String codigo_mco_clientes {get;set;} 
		@AuraEnabled public String descripcion_mco_clientes {get;set;} 
		@AuraEnabled public String nro_mco_clientes {get;set;} 
		@AuraEnabled public String tipo_doc_mco_clientes {get;set;} 
		@AuraEnabled public String nro_doc_mco_clientes {get;set;} 
		@AuraEnabled public String banco_mco_clientes {get;set;} 
		@AuraEnabled public String sucursal_mco_clientes {get;set;} 
		@AuraEnabled public String codigo_moneda_mco_clientes {get;set;} 
		@AuraEnabled public String moneda_mco_clientes {get;set;} 
		@AuraEnabled public String banco_prov {get;set;} 
		@AuraEnabled public String banco_sucursal_prov {get;set;} 
		@AuraEnabled public String banco_moneda_prov {get;set;} 
		@AuraEnabled public String banco_tipo_cta_prov {get;set;} 
		@AuraEnabled public String banco_cuenta_prov {get;set;} 
		@AuraEnabled public String banco_cuenta_descr_prov {get;set;} 
		@AuraEnabled public String orden_cheque_prov {get;set;} 
		@AuraEnabled public String cbu_prov {get;set;} 
		@AuraEnabled public String mpa_codigo_prov {get;set;} 
		@AuraEnabled public String mpa_descripcion_prov {get;set;} 
		@AuraEnabled public String personeria_otros {get;set;} 
		@AuraEnabled public String motivo_inhab_otros {get;set;} 
		@AuraEnabled public String fecha_inicio_otros {get;set;} 
		@AuraEnabled public String codigo_empresa_otros {get;set;} 
		@AuraEnabled public String nombre_empresa_otros {get;set;} 
		@AuraEnabled public String alias_otros {get;set;} 
		@AuraEnabled public String iva_cumplidor_otros {get;set;} 
		@AuraEnabled public String medio_pago {get;set;} 
		@AuraEnabled public String mpa_codigo {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'entidad') {
							entidad = parser.getText();
						} else if (text == 'nombre_fantasia') {
							nombre_fantasia = parser.getText();
						} else if (text == 'razon_social') {
							razon_social = parser.getText();
						} else if (text == 'estado') {
							estado = parser.getText();
						} else if (text == 'solicitud') {
							solicitud = parser.getText();
						} else if (text == 'replicado') {
							replicado = parser.getText();
						} else if (text == 'codigo_ganancias') {
							codigo_ganancias = parser.getText();
						} else if (text == 'secuencia_ganancias') {
							secuencia_ganancias = parser.getText();
						} else if (text == 'regimen_ganancias') {
							regimen_ganancias = parser.getText();
						} else if (text == 'inscripto_ganancias') {
							inscripto_ganancias = parser.getText();
						} else if (text == 'agente_retencion_ganancias') {
							agente_retencion_ganancias = parser.getText();
						} else if (text == 'porcentaje_exencion_ganancias') {
							porcentaje_exencion_ganancias = parser.getText();
						} else if (text == 'codigo_exencion_ganancias') {
							codigo_exencion_ganancias = parser.getText();
						} else if (text == 'regimen_exencion_ganancias') {
							regimen_exencion_ganancias = parser.getText();
						} else if (text == 'resolucion_exencion_ganancias') {
							resolucion_exencion_ganancias = parser.getText();
						} else if (text == 'fecha_desde_exencion_ganancias') {
							fecha_desde_exencion_ganancias = parser.getText();
						} else if (text == 'fecha_hasta_exencion_ganancias') {
							fecha_hasta_exencion_ganancias = parser.getText();
						} else if (text == 'codigo_condicion_iva') {
							codigo_condicion_iva = parser.getText();
						} else if (text == 'descripcion_condicion_iva') {
							descripcion_condicion_iva = parser.getText();
						} else if (text == 'agente_retencion_iva') {
							agente_retencion_iva = parser.getText();
						} else if (text == 'codigo_regimen_iva') {
							codigo_regimen_iva = parser.getText();
						} else if (text == 'descripcion_regimen_iva') {
							descripcion_regimen_iva = parser.getText();
						} else if (text == 'comprobante_iva') {
							comprobante_iva = parser.getText();
						} else if (text == 'porcentaje_exencion_iva') {
							porcentaje_exencion_iva = parser.getText();
						} else if (text == 'codigo_exencion_iva') {
							codigo_exencion_iva = parser.getText();
						} else if (text == 'regimen_exencion_iva') {
							regimen_exencion_iva = parser.getText();
						} else if (text == 'resolucion_exencion_iva') {
							resolucion_exencion_iva = parser.getText();
						} else if (text == 'fecha_desde_exencion_iva') {
							fecha_desde_exencion_iva = parser.getText();
						} else if (text == 'fecha_hasta_exencion_iva') {
							fecha_hasta_exencion_iva = parser.getText();
						} else if (text == 'codigo_ib') {
							codigo_ib = parser.getText();
						} else if (text == 'secuencia_ib') {
							secuencia_ib = parser.getText();
						} else if (text == 'regimen_ib') {
							regimen_ib = parser.getText();
						} else if (text == 'convenio_ib') {
							convenio_ib = parser.getText();
						} else if (text == 'numero_ib') {
							numero_ib = parser.getText();
						} else if (text == 'fecha_vigencia_ib') {
							fecha_vigencia_ib = parser.getText();
						} else if (text == 'provincia_ib') {
							provincia_ib = parser.getText();
						} else if (text == 'agente_retencion_ib') {
							agente_retencion_ib = parser.getText();
						} else if (text == 'cuit_cuil_cpte') {
							cuit_cuil_cpte = parser.getText();
						} else if (text == 'presenta_cpte') {
							presenta_cpte = parser.getText();
						} else if (text == 'tipo_cuit_cpte') {
							tipo_cuit_cpte = parser.getText();
						} else if (text == 'anses_codigo_cpte') {
							anses_codigo_cpte = parser.getText();
						} else if (text == 'codigo_mco_clientes') {
							codigo_mco_clientes = parser.getText();
						} else if (text == 'descripcion_mco_clientes') {
							descripcion_mco_clientes = parser.getText();
						} else if (text == 'nro_mco_clientes') {
							nro_mco_clientes = parser.getText();
						} else if (text == 'tipo_doc_mco_clientes') {
							tipo_doc_mco_clientes = parser.getText();
						} else if (text == 'nro_doc_mco_clientes') {
							nro_doc_mco_clientes = parser.getText();
						} else if (text == 'banco_mco_clientes') {
							banco_mco_clientes = parser.getText();
						} else if (text == 'sucursal_mco_clientes') {
							sucursal_mco_clientes = parser.getText();
						} else if (text == 'codigo_moneda_mco_clientes') {
							codigo_moneda_mco_clientes = parser.getText();
						} else if (text == 'moneda_mco_clientes') {
							moneda_mco_clientes = parser.getText();
						} else if (text == 'banco_prov') {
							banco_prov = parser.getText();
						} else if (text == 'banco_sucursal_prov') {
							banco_sucursal_prov = parser.getText();
						} else if (text == 'banco_moneda_prov') {
							banco_moneda_prov = parser.getText();
						} else if (text == 'banco_tipo_cta_prov') {
							banco_tipo_cta_prov = parser.getText();
						} else if (text == 'banco_cuenta_prov') {
							banco_cuenta_prov = parser.getText();
						} else if (text == 'banco_cuenta_descr_prov') {
							banco_cuenta_descr_prov = parser.getText();
						} else if (text == 'orden_cheque_prov') {
							orden_cheque_prov = parser.getText();
						} else if (text == 'cbu_prov') {
							cbu_prov = parser.getText();
						} else if (text == 'mpa_codigo_prov') {
							mpa_codigo_prov = parser.getText();
						} else if (text == 'mpa_descripcion_prov') {
							mpa_descripcion_prov = parser.getText();
						} else if (text == 'personeria_otros') {
							personeria_otros = parser.getText();
						} else if (text == 'motivo_inhab_otros') {
							motivo_inhab_otros = parser.getText();
						} else if (text == 'fecha_inicio_otros') {
							fecha_inicio_otros = parser.getText();
						} else if (text == 'codigo_empresa_otros') {
							codigo_empresa_otros = parser.getText();
						} else if (text == 'nombre_empresa_otros') {
							nombre_empresa_otros = parser.getText();
						} else if (text == 'alias_otros') {
							alias_otros = parser.getText();
						} else if (text == 'iva_cumplidor_otros') {
							iva_cumplidor_otros = parser.getText();
						} else if (text == 'mpa_codigo') {
							mpa_codigo = parser.getText();
						} else if (text == 'medio_pago') {
							medio_pago = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Allowed_filters {

		public Allowed_filters(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Allowed_filters consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static WSAsociadoGetInterfazFinancieraResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSAsociadoGetInterfazFinancieraResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	
    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }





    private static List<String> arrayOfString(System.JSONParser p) {
        List<String> res = new List<String>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(p.getText());
        }
        return res;
    }






    private static List<Allowed_filters> arrayOfAllowed_filters(System.JSONParser p) {
        List<Allowed_filters> res = new List<Allowed_filters>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Allowed_filters(p));
        }
        return res;
    }



}