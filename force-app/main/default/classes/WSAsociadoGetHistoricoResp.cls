//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSAsociadoGetHistoricoResp {

	public class Meta {
		public List<Allowed_filters> allowed_filters {get;set;} 
		public List<Allowed_filters> allowed_sorts {get;set;} 
		public List<Allowed_filters> allowed_appends {get;set;} 
		public List<Allowed_filters> allowed_fields {get;set;} 
		public List<Allowed_filters> allowed_includes {get;set;} 
		public List<Allowed_filters> default_includes {get;set;} 
		public Optional_get_vars optional_get_vars {get;set;} 

		public Meta(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'allowed_filters') {
							allowed_filters = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_sorts') {
							allowed_sorts = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_appends') {
							allowed_appends = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_fields') {
							allowed_fields = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_includes') {
							allowed_includes = arrayOfAllowed_filters(parser);
						} else if (text == 'default_includes') {
							default_includes = arrayOfAllowed_filters(parser);
						} else if (text == 'optional_get_vars') {
							optional_get_vars = new Optional_get_vars(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Optional_get_vars {
		public List<Allowed_filters> sortBy {get;set;} 
		public List<String> sortOrder {get;set;} 

		public Optional_get_vars(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'sortBy') {
							sortBy = arrayOfAllowed_filters(parser);
						} else if (text == 'sortOrder') {
							sortOrder = arrayOfString(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Optional_get_vars consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Novedades {
		@AuraEnabled public String fecha {get;set;} 
		@AuraEnabled public String usuario {get;set;} 
		@AuraEnabled public String solicitud {get;set;} 
		@AuraEnabled public String fecha_vigencia {get;set;} 
		@AuraEnabled public String tipo_solicitud {get;set;} 
		@AuraEnabled public String tipo_baja {get;set;} 
		@AuraEnabled public String motivo {get;set;} 
		@AuraEnabled public String masiva {get;set;} 
		@AuraEnabled public String rotulo {get;set;} 
		@AuraEnabled public String solicitud_masiva {get;set;} 
		public String afi_id {get;set;} 
		public String hist_afi_id {get;set;} 

		public Novedades(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'fecha') {
							fecha = parser.getText();
						} else if (text == 'usuario') {
							usuario = parser.getText();
						} else if (text == 'solicitud') {
							solicitud = parser.getText();
						} else if (text == 'fecha_vigencia') {
							fecha_vigencia = parser.getText();
						} else if (text == 'tipo_solicitud') {
							tipo_solicitud = parser.getText();
						} else if (text == 'tipo_baja') {
							tipo_baja = parser.getText();
						} else if (text == 'motivo') {
							motivo = parser.getText();
						} else if (text == 'masiva') {
							masiva = parser.getText();
						} else if (text == 'rotulo') {
							rotulo = parser.getText();
						} else if (text == 'solicitud_masiva') {
							solicitud_masiva = parser.getText();
						} else if (text == 'afi_id') {
							afi_id = parser.getText();
						} else if (text == 'hist_afi_id') {
							hist_afi_id = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Novedades consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public List<Data> data {get;set;} 
	public Meta meta {get;set;} 

	public WSAsociadoGetHistoricoResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = arrayOfData(parser);
					} else if (text == 'meta') {
						meta = new Meta(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSAsociadoGetHistoricoResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Data {
		@AuraEnabled public String replicado {get;set;} 
		@AuraEnabled public String fecha_vigencia {get;set;} 
		public String cambia_codigo {get;set;} 
		@AuraEnabled public String codigo {get;set;} 
		public String cambia_estado {get;set;} 
		@AuraEnabled public String estado {get;set;} 
		public String cambia_afiliacion {get;set;} 
		@AuraEnabled public String afiliacion {get;set;} 
		public String cambia_aporta {get;set;} 
		@AuraEnabled public String aporta {get;set;} 
		public String cambia_tipo_afiliado {get;set;} 
		@AuraEnabled public String tipo_afiliado {get;set;} 
		@AuraEnabled public String codigo_titular {get;set;} 
		@AuraEnabled public String apellidos_titular {get;set;} 
		@AuraEnabled public String nombres_titular {get;set;} 
		public String cambia_parentesco {get;set;} 
		public String parentesco_codigo {get;set;} 
		@AuraEnabled public String parentesco_descripcion {get;set;} 
		public String cambia_empresa {get;set;} 
		public String empresa_codigo {get;set;} 
		public String sucursal_codigo {get;set;} 
		@AuraEnabled public String empresa_nombre {get;set;} 
		@AuraEnabled public String sucursal_nombre {get;set;} 
		public String cambia_plan {get;set;} 
		@AuraEnabled public String plan_codigo {get;set;} 
		@AuraEnabled public String plan_nombre {get;set;} 
		public String cambia_obra_social {get;set;} 
		@AuraEnabled public String obra_social_codigo {get;set;} 
		@AuraEnabled public String obra_social_nombre {get;set;} 
		public String cambia_estado_civil {get;set;} 
		@AuraEnabled public String estado_civil {get;set;} 
		public String cambia_discapacitado {get;set;} 
		@AuraEnabled public String discapacitado {get;set;} 
		public String cambia_fecha_alta_adm {get;set;} 
		@AuraEnabled public String fecha_alta_adm {get;set;} 
		public String cambia_antiguedad {get;set;} 
		@AuraEnabled public String antiguedad_reconocida {get;set;} 
		public String cambia_adherente {get;set;} 
		@AuraEnabled public String adherente {get;set;} 
		public String cambia_agencia {get;set;} 
		public String delegacion_os {get;set;} 
		@AuraEnabled public String agencia_codigo {get;set;} 
		@AuraEnabled public String agencia_nombre {get;set;} 
		public String cambia_agrupacion {get;set;} 
		@AuraEnabled public String agrupacion {get;set;} 
		@AuraEnabled public String agrupacion_nombre {get;set;} 
		public String cambia_agrupacion1 {get;set;} 
		@AuraEnabled public String agrupacion1 {get;set;} 
		@AuraEnabled public String agrupacion1_nombre {get;set;} 
		public String cambia_agrupacion2 {get;set;} 
		@AuraEnabled public String agrupacion2 {get;set;} 
		@AuraEnabled public String agrupacion2_nombre {get;set;} 
		public String cambia_agrupacion3 {get;set;} 
		@AuraEnabled public String agrupacion3 {get;set;} 
		@AuraEnabled public String agrupacion3_nombre {get;set;} 
		public String cambia_agrupacion4 {get;set;} 
		@AuraEnabled public String agrupacion4 {get;set;} 
		@AuraEnabled public String agrupacion4_nombre {get;set;} 
		public String tipo_baja_codigo {get;set;} 
		@AuraEnabled public String tipo_baja_nombre {get;set;} 
		@AuraEnabled public String motivo_baja {get;set;} 
		public String cambia_categoria {get;set;} 
		@AuraEnabled public String categoria_codigo {get;set;} 
		@AuraEnabled public String categoria_nombre {get;set;} 
		@AuraEnabled public String cambio_a_nivel_de {get;set;} 
		@AuraEnabled public String hist_afi_id {get;set;} 
		@AuraEnabled public String afi_id_titular {get;set;} 
		@AuraEnabled public List<Novedades> novedades {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'replicado') {
							replicado = parser.getText();
						} else if (text == 'fecha_vigencia') {
							fecha_vigencia = parser.getText();
						} else if (text == 'cambia_codigo') {
							cambia_codigo = parser.getText();
						} else if (text == 'codigo') {
							codigo = parser.getText();
						} else if (text == 'cambia_estado') {
							cambia_estado = parser.getText();
						} else if (text == 'estado') {
							estado = parser.getText();
						} else if (text == 'cambia_afiliacion') {
							cambia_afiliacion = parser.getText();
						} else if (text == 'afiliacion') {
							afiliacion = parser.getText();
						} else if (text == 'cambia_aporta') {
							cambia_aporta = parser.getText();
						} else if (text == 'aporta') {
							aporta = parser.getText();
						} else if (text == 'cambia_tipo_afiliado') {
							cambia_tipo_afiliado = parser.getText();
						} else if (text == 'tipo_afiliado') {
							tipo_afiliado = parser.getText();
						} else if (text == 'codigo_titular') {
							codigo_titular = parser.getText();
						} else if (text == 'apellidos_titular') {
							apellidos_titular = parser.getText();
						} else if (text == 'nombres_titular') {
							nombres_titular = parser.getText();
						} else if (text == 'cambia_parentesco') {
							cambia_parentesco = parser.getText();
						} else if (text == 'parentesco_codigo') {
							parentesco_codigo = parser.getText();
						} else if (text == 'parentesco_descripcion') {
							parentesco_descripcion = parser.getText();
						} else if (text == 'cambia_empresa') {
							cambia_empresa = parser.getText();
						} else if (text == 'empresa_codigo') {
							empresa_codigo = parser.getText();
						} else if (text == 'sucursal_codigo') {
							sucursal_codigo = parser.getText();
						} else if (text == 'empresa_nombre') {
							empresa_nombre = parser.getText();
						} else if (text == 'sucursal_nombre') {
							sucursal_nombre = parser.getText();
						} else if (text == 'cambia_plan') {
							cambia_plan = parser.getText();
						} else if (text == 'plan_codigo') {
							plan_codigo = parser.getText();
						} else if (text == 'plan_nombre') {
							plan_nombre = parser.getText();
						} else if (text == 'cambia_obra_social') {
							cambia_obra_social = parser.getText();
						} else if (text == 'obra_social_codigo') {
							obra_social_codigo = parser.getText();
						} else if (text == 'obra_social_nombre') {
							obra_social_nombre = parser.getText();
						} else if (text == 'cambia_estado_civil') {
							cambia_estado_civil = parser.getText();
						} else if (text == 'estado_civil') {
							estado_civil = parser.getText();
						} else if (text == 'cambia_discapacitado') {
							cambia_discapacitado = parser.getText();
						} else if (text == 'discapacitado') {
							discapacitado = parser.getText();
						} else if (text == 'cambia_fecha_alta_adm') {
							cambia_fecha_alta_adm = parser.getText();
						} else if (text == 'fecha_alta_adm') {
							fecha_alta_adm = parser.getText();
						} else if (text == 'cambia_antiguedad') {
							cambia_antiguedad = parser.getText();
						} else if (text == 'antiguedad_reconocida') {
							antiguedad_reconocida = parser.getText();
						} else if (text == 'cambia_adherente') {
							cambia_adherente = parser.getText();
						} else if (text == 'adherente') {
							adherente = parser.getText();
						} else if (text == 'cambia_agencia') {
							cambia_agencia = parser.getText();
						} else if (text == 'delegacion_os') {
							delegacion_os = parser.getText();
						} else if (text == 'agencia_codigo') {
							agencia_codigo = parser.getText();
						} else if (text == 'agencia_nombre') {
							agencia_nombre = parser.getText();
						} else if (text == 'cambia_agrupacion') {
							cambia_agrupacion = parser.getText();
						} else if (text == 'agrupacion') {
							agrupacion = parser.getText();
						} else if (text == 'agrupacion_nombre') {
							agrupacion_nombre = parser.getText();
						} else if (text == 'cambia_agrupacion1') {
							cambia_agrupacion1 = parser.getText();
						} else if (text == 'agrupacion1') {
							agrupacion1 = parser.getText();
						} else if (text == 'agrupacion1_nombre') {
							agrupacion1_nombre = parser.getText();
						} else if (text == 'cambia_agrupacion2') {
							cambia_agrupacion2 = parser.getText();
						} else if (text == 'agrupacion2') {
							agrupacion2 = parser.getText();
						} else if (text == 'agrupacion2_nombre') {
							agrupacion2_nombre = parser.getText();
						} else if (text == 'cambia_agrupacion3') {
							cambia_agrupacion3 = parser.getText();
						} else if (text == 'agrupacion3') {
							agrupacion3 = parser.getText();
						} else if (text == 'agrupacion3_nombre') {
							agrupacion3_nombre = parser.getText();
						} else if (text == 'cambia_agrupacion4') {
							cambia_agrupacion4 = parser.getText();
						} else if (text == 'agrupacion4') {
							agrupacion4 = parser.getText();
						} else if (text == 'agrupacion4_nombre') {
							agrupacion4_nombre = parser.getText();
						} else if (text == 'tipo_baja_codigo') {
							tipo_baja_codigo = parser.getText();
						} else if (text == 'tipo_baja_nombre') {
							tipo_baja_nombre = parser.getText();
						} else if (text == 'motivo_baja') {
							motivo_baja = parser.getText();
						} else if (text == 'cambia_categoria') {
							cambia_categoria = parser.getText();
						} else if (text == 'categoria_codigo') {
							categoria_codigo = parser.getText();
						} else if (text == 'categoria_nombre') {
							categoria_nombre = parser.getText();
						} else if (text == 'cambio_a_nivel_de') {
							cambio_a_nivel_de = parser.getText();
						} else if (text == 'hist_afi_id') {
							hist_afi_id = parser.getText();
						} else if (text == 'afi_id_titular') {
							afi_id_titular = parser.getText();
						} else if (text == 'novedades') {
							novedades = arrayOfNovedades(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Allowed_filters {

		public Allowed_filters(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Allowed_filters consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Novedades_Z {
		public String fecha {get;set;} 
		public String usuario {get;set;} 
		public String solicitud {get;set;} 
		public String fecha_vigencia {get;set;} 
		public String tipo_solicitud {get;set;} 
		public Object tipo_baja {get;set;} 
		public Object motivo {get;set;} 
		public String masiva {get;set;} 
		public Object rotulo {get;set;} 
		public Object solicitud_masiva {get;set;} 
		public String afi_id {get;set;} 
		public String hist_afi_id {get;set;} 

		public Novedades_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'fecha') {
							fecha = parser.getText();
						} else if (text == 'usuario') {
							usuario = parser.getText();
						} else if (text == 'solicitud') {
							solicitud = parser.getText();
						} else if (text == 'fecha_vigencia') {
							fecha_vigencia = parser.getText();
						} else if (text == 'tipo_solicitud') {
							tipo_solicitud = parser.getText();
						} else if (text == 'tipo_baja') {
							tipo_baja = parser.readValueAs(Object.class);
						} else if (text == 'motivo') {
							motivo = parser.readValueAs(Object.class);
						} else if (text == 'masiva') {
							masiva = parser.getText();
						} else if (text == 'rotulo') {
							rotulo = parser.readValueAs(Object.class);
						} else if (text == 'solicitud_masiva') {
							solicitud_masiva = parser.readValueAs(Object.class);
						} else if (text == 'afi_id') {
							afi_id = parser.getText();
						} else if (text == 'hist_afi_id') {
							hist_afi_id = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Novedades_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static WSAsociadoGetHistoricoResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSAsociadoGetHistoricoResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	
    private static List<Novedades> arrayOfNovedades(System.JSONParser p) {
        List<Novedades> res = new List<Novedades>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Novedades(p));
        }
        return res;
    }




    private static List<String> arrayOfString(System.JSONParser p) {
        List<String> res = new List<String>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(p.getText());
        }
        return res;
    }



    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }



    private static List<Novedades_Z> arrayOfNovedades_Z(System.JSONParser p) {
        List<Novedades_Z> res = new List<Novedades_Z>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Novedades_Z(p));
        }
        return res;
    }








    private static List<Allowed_filters> arrayOfAllowed_filters(System.JSONParser p) {
        List<Allowed_filters> res = new List<Allowed_filters>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Allowed_filters(p));
        }
        return res;
    }



}