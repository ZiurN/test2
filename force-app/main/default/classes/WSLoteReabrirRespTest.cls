//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class WSLoteReabrirRespTest {
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"error\": false,'+
		'  \"data\": {'+
		'    \"lote\": {'+
		'      \"lr_id\": 5397,'+
		'      \"estado\": \"A\",'+
		'      \"prei_id\": \"38855\",'+
		'      \"procesos\": ['+
		'        {'+
		'          \"prei_id\": \"38855\",'+
		'          \"inicio\": \"2020-04-13 14:43:45\",'+
		'          \"fin\": \"2020-04-13 14:43:45\",'+
		'          \"lr_lr_id\": \"5397\",'+
		'          \"vda_drv_tipo_proceso\": \"RETPREAP\",'+
		'          \"nombre_proc\": \"REAPERTURA\",'+
		'          \"logs\": []'+
		'        }'+
		'      ]'+
		'    }'+
		'  },'+
		'  \"httpCode\": 201,'+
		'  \"message\": \"Se reabri√≥ correctamente el lote.\",'+
		'  \"meta\": {'+
		'    \"allowed_includes\": [],'+
		'    \"default_includes\": []'+
		'  }'+
		'}';
		WSLoteReabrirResp r = WSLoteReabrirResp.parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WSLoteReabrirResp.Lote objLote = new WSLoteReabrirResp.Lote(System.JSON.createParser(json));
		System.assert(objLote != null);
		System.assert(objLote.lr_id == null);
		System.assert(objLote.estado == null);
		System.assert(objLote.prei_id == null);
		System.assert(objLote.procesos == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WSLoteReabrirResp.Meta objMeta = new WSLoteReabrirResp.Meta(System.JSON.createParser(json));
		System.assert(objMeta != null);
		System.assert(objMeta.allowed_includes == null);
		System.assert(objMeta.default_includes == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WSLoteReabrirResp objWSLoteReabrirResp = new WSLoteReabrirResp(System.JSON.createParser(json));
		System.assert(objWSLoteReabrirResp != null);
		System.assert(objWSLoteReabrirResp.error == null);
		System.assert(objWSLoteReabrirResp.data == null);
		System.assert(objWSLoteReabrirResp.httpCode == null);
		System.assert(objWSLoteReabrirResp.message == null);
		System.assert(objWSLoteReabrirResp.meta == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WSLoteReabrirResp.Procesos objProcesos = new WSLoteReabrirResp.Procesos(System.JSON.createParser(json));
		System.assert(objProcesos != null);
		System.assert(objProcesos.prei_id == null);
		System.assert(objProcesos.inicio == null);
		System.assert(objProcesos.fin == null);
		System.assert(objProcesos.lr_lr_id == null);
		System.assert(objProcesos.vda_drv_tipo_proceso == null);
		System.assert(objProcesos.nombre_proc == null);
		System.assert(objProcesos.logs == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WSLoteReabrirResp.Data objData = new WSLoteReabrirResp.Data(System.JSON.createParser(json));
		System.assert(objData != null);
		System.assert(objData.lote == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		WSLoteReabrirResp.Logs objLogs = new WSLoteReabrirResp.Logs(System.JSON.createParser(json));
		System.assert(objLogs != null);
	}
}