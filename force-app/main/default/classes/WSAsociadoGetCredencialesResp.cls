//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSAsociadoGetCredencialesResp {

	public class Meta {
		public List<Novedades_Z> allowed_filters {get;set;} 
		public List<Novedades_Z> allowed_sorts {get;set;} 
		public List<Novedades_Z> allowed_appends {get;set;} 
		public List<Novedades_Z> allowed_fields {get;set;} 
		public List<Novedades_Z> allowed_includes {get;set;} 
		public List<Novedades_Z> default_includes {get;set;} 
		public Optional_get_vars optional_get_vars {get;set;} 

		public Meta(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'allowed_filters') {
							allowed_filters = arrayOfNovedades_Z(parser);
						} else if (text == 'allowed_sorts') {
							allowed_sorts = arrayOfNovedades_Z(parser);
						} else if (text == 'allowed_appends') {
							allowed_appends = arrayOfNovedades_Z(parser);
						} else if (text == 'allowed_fields') {
							allowed_fields = arrayOfNovedades_Z(parser);
						} else if (text == 'allowed_includes') {
							allowed_includes = arrayOfNovedades_Z(parser);
						} else if (text == 'default_includes') {
							default_includes = arrayOfNovedades_Z(parser);
						} else if (text == 'optional_get_vars') {
							optional_get_vars = new Optional_get_vars(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Optional_get_vars {
		public List<Novedades_Z> sortBy {get;set;} 
		public List<String> sortOrder {get;set;} 

		public Optional_get_vars(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'sortBy') {
							sortBy = arrayOfNovedades_Z(parser);
						} else if (text == 'sortOrder') {
							sortOrder = arrayOfString(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Optional_get_vars consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Novedades {
		public String novedad {get;set;} 
		public String codigo_reservado {get;set;} 
		public String codigo_origen_novedad {get;set;} 
		public String nombre_origen_novedad {get;set;} 
		public String fecha_generacion {get;set;} 
		public String fecha_aplicacion {get;set;} 

		public Novedades(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'novedad') {
							novedad = parser.getText();
						} else if (text == 'codigo_reservado') {
							codigo_reservado = parser.getText();
						} else if (text == 'codigo_origen_novedad') {
							codigo_origen_novedad = parser.getText();
						} else if (text == 'nombre_origen_novedad') {
							nombre_origen_novedad = parser.getText();
						} else if (text == 'fecha_generacion') {
							fecha_generacion = parser.getText();
						} else if (text == 'fecha_aplicacion') {
							fecha_aplicacion = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Novedades consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public List<Data> data {get;set;} 
	public Meta meta {get;set;} 

	public WSAsociadoGetCredencialesResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = arrayOfData(parser);
					} else if (text == 'meta') {
						meta = new Meta(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSAsociadoGetCredencialesResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Data {
		public Integer cred_id {get;set;} 
		public String afi_id {get;set;} 
		@AuraEnabled public String codigo {get;set;} 
		@AuraEnabled public String secuencia {get;set;} 
		@AuraEnabled public String fecha_vigencia {get;set;} 
		@AuraEnabled public String fecha_vencimiento {get;set;} 
		@AuraEnabled public String fecha_baja {get;set;} 
		@AuraEnabled public String fecha_emision {get;set;} 
		@AuraEnabled public String fecha_generacion {get;set;} 
		@AuraEnabled public String fecha_anulacion {get;set;} 
		@AuraEnabled public String fecha_entregada {get;set;} 
		public String proceso_generacion {get;set;} 
		public String usuario_generacion {get;set;} 
		public String inicio_generacion {get;set;} 
		public String fin_generacion {get;set;} 
		public String proceso_generacion_1 {get;set;} 
		public String usuario_generacion_1 {get;set;} 
		public String inicio_generacion_1 {get;set;} 
		public String fin_generacion_1 {get;set;} 
		public String proceso_generacion_2 {get;set;} 
		public String usuario_generacion_2 {get;set;} 
		public String inicio_generacion_2 {get;set;} 
		public String fin_generacion_2 {get;set;} 
		public String proceso_generacion_3 {get;set;} 
		public String usuario_generacion_3 {get;set;} 
		public String inicio_generacion_3 {get;set;} 
		public String fin_generacion_3 {get;set;} 
		public String proceso_generacion_4 {get;set;} 
		public String usuario_generacion_4 {get;set;} 
		public String inicio_generacion_4 {get;set;} 
		public String fin_generacion_4 {get;set;} 
		public String detalle_concepto_liq {get;set;} 
		public String codigo_esquema_modelo {get;set;} 
		public String nombre_esquema_modelo {get;set;} 
		public String codigo_formato_modelo {get;set;} 
		public String nombre_formato_modelo {get;set;} 
		public String modelo_precios_modelo {get;set;} 
		public String modelo_vencimiento_modelo {get;set;} 
		public String renueva_aut_modelo {get;set;} 
		public List<Novedades> novedades {get;set;} 
		public List<Atributos> atributos {get;set;} 
		public List<Lotes> lotes {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'cred_id') {
							cred_id = parser.getIntegerValue();
						} else if (text == 'afi_id') {
							afi_id = parser.getText();
						} else if (text == 'codigo') {
							codigo = parser.getText();
						} else if (text == 'secuencia') {
							secuencia = parser.getText();
						} else if (text == 'fecha_vigencia') {
							fecha_vigencia = parser.getText();
						} else if (text == 'fecha_vencimiento') {
							fecha_vencimiento = parser.getText();
						} else if (text == 'fecha_baja') {
							fecha_baja = parser.getText();
						} else if (text == 'fecha_emision') {
							fecha_emision = parser.getText();
						} else if (text == 'fecha_generacion') {
							fecha_generacion = parser.getText();
						} else if (text == 'fecha_anulacion') {
							fecha_anulacion = parser.getText();
						} else if (text == 'fecha_entregada') {
							fecha_entregada = parser.getText();
						} else if (text == 'proceso_generacion') {
							proceso_generacion = parser.getText();
						} else if (text == 'usuario_generacion') {
							usuario_generacion = parser.getText();
						} else if (text == 'inicio_generacion') {
							inicio_generacion = parser.getText();
						} else if (text == 'fin_generacion') {
							fin_generacion = parser.getText();
						} else if (text == 'proceso_generacion_1') {
							proceso_generacion_1 = parser.getText();
						} else if (text == 'usuario_generacion_1') {
							usuario_generacion_1 = parser.getText();
						} else if (text == 'inicio_generacion_1') {
							inicio_generacion_1 = parser.getText();
						} else if (text == 'fin_generacion_1') {
							fin_generacion_1 = parser.getText();
						} else if (text == 'proceso_generacion_2') {
							proceso_generacion_2 = parser.getText();
						} else if (text == 'usuario_generacion_2') {
							usuario_generacion_2 = parser.getText();
						} else if (text == 'inicio_generacion_2') {
							inicio_generacion_2 = parser.getText();
						} else if (text == 'fin_generacion_2') {
							fin_generacion_2 = parser.getText();
						} else if (text == 'proceso_generacion_3') {
							proceso_generacion_3 = parser.getText();
						} else if (text == 'usuario_generacion_3') {
							usuario_generacion_3 = parser.getText();
						} else if (text == 'inicio_generacion_3') {
							inicio_generacion_3 = parser.getText();
						} else if (text == 'fin_generacion_3') {
							fin_generacion_3 = parser.getText();
						} else if (text == 'proceso_generacion_4') {
							proceso_generacion_4 = parser.getText();
						} else if (text == 'usuario_generacion_4') {
							usuario_generacion_4 = parser.getText();
						} else if (text == 'inicio_generacion_4') {
							inicio_generacion_4 = parser.getText();
						} else if (text == 'fin_generacion_4') {
							fin_generacion_4 = parser.getText();
						} else if (text == 'detalle_concepto_liq') {
							detalle_concepto_liq = parser.getText();
						} else if (text == 'codigo_esquema_modelo') {
							codigo_esquema_modelo = parser.getText();
						} else if (text == 'nombre_esquema_modelo') {
							nombre_esquema_modelo = parser.getText();
						} else if (text == 'codigo_formato_modelo') {
							codigo_formato_modelo = parser.getText();
						} else if (text == 'nombre_formato_modelo') {
							nombre_formato_modelo = parser.getText();
						} else if (text == 'modelo_precios_modelo') {
							modelo_precios_modelo = parser.getText();
						} else if (text == 'modelo_vencimiento_modelo') {
							modelo_vencimiento_modelo = parser.getText();
						} else if (text == 'renueva_aut_modelo') {
							renueva_aut_modelo = parser.getText();
						} else if (text == 'novedades') {
							novedades = arrayOfNovedades(parser);
						} else if (text == 'atributos') {
							atributos = arrayOfAtributos(parser);
						} else if (text == 'lotes') {
							lotes = arrayOfLotes(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Atributos {
		public String orden {get;set;} 
		public String atributo {get;set;} 
		public String descripcion {get;set;} 
		public String valor {get;set;} 

		public Atributos(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'orden') {
							orden = parser.getText();
						} else if (text == 'atributo') {
							atributo = parser.getText();
						} else if (text == 'descripcion') {
							descripcion = parser.getText();
						} else if (text == 'valor') {
							valor = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Atributos consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Lotes {
		public String tipo_lote {get;set;} 
		public String lote {get;set;} 
		public String procesado {get;set;} 

		public Lotes(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'tipo_lote') {
							tipo_lote = parser.getText();
						} else if (text == 'lote') {
							lote = parser.getText();
						} else if (text == 'procesado') {
							procesado = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Lotes consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Novedades_Z {

		public Novedades_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Novedades_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static WSAsociadoGetCredencialesResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSAsociadoGetCredencialesResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	




    private static List<Lotes> arrayOfLotes(System.JSONParser p) {
        List<Lotes> res = new List<Lotes>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Lotes(p));
        }
        return res;
    }


    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }


    private static List<Atributos> arrayOfAtributos(System.JSONParser p) {
        List<Atributos> res = new List<Atributos>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Atributos(p));
        }
        return res;
    }



    private static List<String> arrayOfString(System.JSONParser p) {
        List<String> res = new List<String>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(p.getText());
        }
        return res;
    }




    private static List<Novedades> arrayOfNovedades(System.JSONParser p) {
        List<Novedades> res = new List<Novedades>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Novedades(p));
        }
        return res;
    }











    private static List<Novedades_Z> arrayOfNovedades_Z(System.JSONParser p) {
        List<Novedades_Z> res = new List<Novedades_Z>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Novedades_Z(p));
        }
        return res;
    }


}