//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSCaseReintegroRevertirResp {

	public class Meta {
		public List<Allowed_includes> allowed_includes {get;set;} 
		public List<Allowed_includes> default_includes {get;set;} 

		public Meta(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'allowed_includes') {
							allowed_includes = arrayOfAllowed_includes(parser);
						} else if (text == 'default_includes') {
							default_includes = arrayOfAllowed_includes(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Allowed_includes {

		public Allowed_includes(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Allowed_includes consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public Boolean error {get;set;} 
	public Data data {get;set;} 
	public Integer httpCode {get;set;} 
	public String message {get;set;} 
	public Meta meta {get;set;} 

	public WSCaseReintegroRevertirResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'error') {
						error = parser.getBooleanValue();
					} else if (text == 'data') {
						data = new Data(parser);
					} else if (text == 'httpCode') {
						httpCode = parser.getIntegerValue();
					} else if (text == 'message') {
						message = parser.getText();
					} else if (text == 'meta') {
						meta = new Meta(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSCaseReintegroRevertirResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Data {
		public List<Reintegro> reintegro {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'reintegro') {
							reintegro = arrayOfReintegro(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Reintegro {
		public String lote {get;set;} 
		public String lote_original {get;set;} 
		public String rei_id {get;set;} 
		public String orei_orei_id {get;set;} 
		public String fecha {get;set;} 
		public String del_os_codigo {get;set;} 
		public String afi_afi_id {get;set;} 
		public String codigo {get;set;} 
		public String asociado_nombre {get;set;} 
		public String em_em_id {get;set;} 
		public String efe_codigo_realizador {get;set;} 
		public String efe_codigo_prescriptor {get;set;} 
		public String fecha_prescripcion {get;set;} 
		public String diag_codigo {get;set;} 
		public String cobro_indeb {get;set;} 
		public String razon_social {get;set;} 
		public String cuit {get;set;} 
		public String tipo_comprobante {get;set;} 
		public String nro_comprobante {get;set;} 
		public String fecha_comprobante {get;set;} 
		public String importe {get;set;} 
		public String vda_drv_estado {get;set;} 
		public String nombre_estado {get;set;} 
		public String nro_sf {get;set;} 

		public Reintegro(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'lote') {
							lote = parser.getText();
						} else if (text == 'lote_original') {
							lote_original = parser.getText();
						} else if (text == 'rei_id') {
							rei_id = parser.getText();
						} else if (text == 'orei_orei_id') {
							orei_orei_id = parser.getText();
						} else if (text == 'fecha') {
							fecha = parser.getText();
						} else if (text == 'del_os_codigo') {
							del_os_codigo = parser.getText();
						} else if (text == 'afi_afi_id') {
							afi_afi_id = parser.getText();
						} else if (text == 'codigo') {
							codigo = parser.getText();
						} else if (text == 'asociado_nombre') {
							asociado_nombre = parser.getText();
						} else if (text == 'em_em_id') {
							em_em_id = parser.getText();
						} else if (text == 'efe_codigo_realizador') {
							efe_codigo_realizador = parser.getText();
						} else if (text == 'efe_codigo_prescriptor') {
							efe_codigo_prescriptor = parser.getText();
						} else if (text == 'fecha_prescripcion') {
							fecha_prescripcion = parser.getText();
						} else if (text == 'diag_codigo') {
							diag_codigo = parser.getText();
						} else if (text == 'cobro_indeb') {
							cobro_indeb = parser.getText();
						} else if (text == 'razon_social') {
							razon_social = parser.getText();
						} else if (text == 'cuit') {
							cuit = parser.getText();
						} else if (text == 'tipo_comprobante') {
							tipo_comprobante = parser.getText();
						} else if (text == 'nro_comprobante') {
							nro_comprobante = parser.getText();
						} else if (text == 'fecha_comprobante') {
							fecha_comprobante = parser.getText();
						} else if (text == 'importe') {
							importe = parser.getText();
						} else if (text == 'vda_drv_estado') {
							vda_drv_estado = parser.getText();
						} else if (text == 'nombre_estado') {
							nombre_estado = parser.getText();
						} else if (text == 'nro_sf') {
							nro_sf = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Reintegro consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static WSCaseReintegroRevertirResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSCaseReintegroRevertirResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	
    private static List<Reintegro> arrayOfReintegro(System.JSONParser p) {
        List<Reintegro> res = new List<Reintegro>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Reintegro(p));
        }
        return res;
    }










    private static List<Allowed_includes> arrayOfAllowed_includes(System.JSONParser p) {
        List<Allowed_includes> res = new List<Allowed_includes>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Allowed_includes(p));
        }
        return res;
    }



}