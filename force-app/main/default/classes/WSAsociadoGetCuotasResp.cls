//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSAsociadoGetCuotasResp {

	public class Detalle {
		@AuraEnabled public String clausula {get;set;} 
		@AuraEnabled public String categoria_grupal {get;set;} 
		@AuraEnabled public String regla_adicional {get;set;} 
		@AuraEnabled public String cantidad {get;set;} 
		@AuraEnabled public String importe_final {get;set;} 
		@AuraEnabled public String importe_regla_adicional {get;set;} 
		@AuraEnabled public String importe_cuadro_costo {get;set;} 
		@AuraEnabled public String importe_bonif_recargo {get;set;} 
		@AuraEnabled public String coeficiente {get;set;} 
		@AuraEnabled public String coeficiente_general {get;set;} 
		@AuraEnabled public String coeficiente_b_r {get;set;} 
		public String dca_id {get;set;} 
		public String dca_id_ajuste {get;set;}
		@AuraEnabled public String codigo_afiliado {get;set;} 
		@AuraEnabled public String apellidos {get;set;}
		@AuraEnabled public String nombres {get;set;}

		public Detalle(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'clausula') {
							clausula = parser.getText();
						} else if (text == 'categoria_grupal') {
							categoria_grupal = parser.getText();
						} else if (text == 'regla_adicional') {
							regla_adicional = parser.getText();
						} else if (text == 'cantidad') {
							cantidad = parser.getText();
						} else if (text == 'importe_final') {
							importe_final = parser.getText();
						} else if (text == 'importe_regla_adicional') {
							importe_regla_adicional = parser.getText();
						} else if (text == 'importe_cuadro_costo') {
							importe_cuadro_costo = parser.getText();
						} else if (text == 'importe_bonif_recargo') {
							importe_bonif_recargo = parser.getText();
						} else if (text == 'coeficiente') {
							coeficiente = parser.getText();
						} else if (text == 'coeficiente_general') {
							coeficiente_general = parser.getText();
						} else if (text == 'coeficiente_b_r') {
							coeficiente_b_r = parser.getText();
						} else if (text == 'dca_id') {
							dca_id = parser.getText();
						} else if (text == 'dca_id_ajuste') {
							dca_id_ajuste = parser.getText();
						} else if (text == 'codigo_afiliado') {
							codigo_afiliado = parser.getText();
						} else if (text == 'apellidos') {
							apellidos = parser.getText();
						} else if (text == 'nombres') {
							nombres = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Detalle consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Data {
		@AuraEnabled public Integer valores_cuota_id {get;set;} 
		@AuraEnabled public String periodo {get;set;} 
		@AuraEnabled public String fecha_generacion {get;set;} 
		@AuraEnabled public String monto {get;set;} 
		@AuraEnabled public String cuadro_costos {get;set;} 
		@AuraEnabled public String recargo_bonificacion {get;set;} 
		@AuraEnabled public String monto_regla_adicional {get;set;} 
		@AuraEnabled public String monto_general {get;set;} 
		@AuraEnabled public String monto_bonificacion_recargo {get;set;} 
		public String liquidada {get;set;} 
		public String ajustada {get;set;} 
		@AuraEnabled public List<Detalle> detalle {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'valores_cuota_id') {
							valores_cuota_id = parser.getIntegerValue();
						} else if (text == 'periodo') {
							periodo = parser.getText();
						} else if (text == 'fecha_generacion') {
							fecha_generacion = parser.getText();
						} else if (text == 'monto') {
							monto = parser.getText();
						} else if (text == 'cuadro_costos') {
							cuadro_costos = parser.getText();
						} else if (text == 'recargo_bonificacion') {
							recargo_bonificacion = parser.getText();
						} else if (text == 'monto_regla_adicional') {
							monto_regla_adicional = parser.getText();
						} else if (text == 'monto_general') {
							monto_general = parser.getText();
						} else if (text == 'monto_bonificacion_recargo') {
							monto_bonificacion_recargo = parser.getText();
						} else if (text == 'liquidada') {
							liquidada = parser.getText();
						} else if (text == 'ajustada') {
							ajustada = parser.getText();
						} else if (text == 'detalle') {
							detalle = arrayOfDetalle(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public List<Data> data {get;set;} 

	public WSAsociadoGetCuotasResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = arrayOfData(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSAsociadoGetCuotasResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public static WSAsociadoGetCuotasResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSAsociadoGetCuotasResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}

    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }

    private static List<Detalle> arrayOfDetalle(System.JSONParser p) {
        List<Detalle> res = new List<Detalle>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Detalle(p));
        }
        return res;
    }
}