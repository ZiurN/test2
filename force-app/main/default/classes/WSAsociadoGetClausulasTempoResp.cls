//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSAsociadoGetClausulasTempoResp {
	
	public List<Data> data {get;set;} 

	public WSAsociadoGetClausulasTempoResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = arrayOfData(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSAsociadoGetClausulasTempoResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Data {
		@AuraEnabled public String tipo_clausula {get;set;} 
		@AuraEnabled public String tipo_clausula_descripcion {get;set;} 
		@AuraEnabled public String fecha_vigencia_desde {get;set;} 
		@AuraEnabled public String fecha_vigencia_hasta {get;set;} 
		@AuraEnabled public String tipo_asignacion {get;set;} 
		@AuraEnabled public String tipo_asignacion_descripcion {get;set;} 
		@AuraEnabled public String nivel_aprobacion {get;set;} 
		@AuraEnabled public String requiere_evento {get;set;} 
		@AuraEnabled public String requiere_patologia {get;set;} 
		@AuraEnabled public String diag_codigo {get;set;} 
		@AuraEnabled public String diag_descripcion {get;set;} 
		@AuraEnabled public String diag_fecha {get;set;} 
		@AuraEnabled public String numero_evento {get;set;} 
		@AuraEnabled public String descripcion_evento {get;set;} 
		@AuraEnabled public String observaciones {get;set;}
		@AuraEnabled public String fecha_carga {get;set;} 
		@AuraEnabled public String user_carga {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'tipo_clausula') {
							tipo_clausula = parser.getText();
						} else if (text == 'tipo_clausula_descripcion') {
							tipo_clausula_descripcion = parser.getText();
						} else if (text == 'fecha_vigencia_desde') {
							fecha_vigencia_desde = parser.getText();
						} else if (text == 'fecha_vigencia_hasta') {
							fecha_vigencia_hasta = parser.getText();
						} else if (text == 'tipo_asignacion') {
							tipo_asignacion = parser.getText();
						} else if (text == 'tipo_asignacion_descripcion') {
							tipo_asignacion_descripcion = parser.getText();
						} else if (text == 'nivel_aprobacion') {
							nivel_aprobacion = parser.getText();
						} else if (text == 'requiere_evento') {
							requiere_evento = parser.getText();
						} else if (text == 'requiere_patologia') {
							requiere_patologia = parser.getText();
						} else if (text == 'diag_codigo') {
							diag_codigo = parser.getText();
						} else if (text == 'diag_descripcion') {
							diag_descripcion = parser.getText();
						} else if (text == 'diag_fecha') {
							diag_fecha = parser.getText();
						} else if (text == 'numero_evento') {
							numero_evento = parser.getText();
						} else if (text == 'descripcion_evento') {
							descripcion_evento = parser.getText();
						} else if (text == 'observaciones') {
							observaciones = parser.getText();
						} else if (text == 'fecha_carga') {
							fecha_carga = parser.getText();
						} else if (text == 'user_carga') {
							user_carga = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}	
	
	public static WSAsociadoGetClausulasTempoResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSAsociadoGetClausulasTempoResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}

    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }

}