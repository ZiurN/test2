//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSBatchAsociadoResp {

	public class Meta {
		public Integer current_page {get;set;} 
		public Integer from_Z {get;set;} // in json: from
		public Integer last_page {get;set;} 
		public String path {get;set;} 
		public Integer per_page {get;set;} 
		public Integer to {get;set;} 
		public Integer total {get;set;} 
		public List<Allowed_filters> allowed_filters {get;set;} 
		public List<Allowed_filters> allowed_sorts {get;set;} 
		public List<Allowed_filters> allowed_appends {get;set;} 
		public List<Allowed_filters> allowed_fields {get;set;} 
		public List<Allowed_filters> allowed_includes {get;set;} 
		public List<Allowed_filters> default_includes {get;set;} 
		public Optional_get_vars optional_get_vars {get;set;} 

		public Meta(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'current_page') {
							current_page = parser.getIntegerValue();
						} else if (text == 'from') {
							from_Z = parser.getIntegerValue();
						} else if (text == 'last_page') {
							last_page = parser.getIntegerValue();
						} else if (text == 'path') {
							path = parser.getText();
						} else if (text == 'per_page') {
							per_page = parser.getIntegerValue();
						} else if (text == 'to') {
							to = parser.getIntegerValue();
						} else if (text == 'total') {
							total = parser.getIntegerValue();
						} else if (text == 'allowed_filters') {
							allowed_filters = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_sorts') {
							allowed_sorts = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_appends') {
							allowed_appends = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_fields') {
							allowed_fields = arrayOfAllowed_filters(parser);
						} else if (text == 'allowed_includes') {
							allowed_includes = arrayOfAllowed_filters(parser);
						} else if (text == 'default_includes') {
							default_includes = arrayOfAllowed_filters(parser);
						} else if (text == 'optional_get_vars') {
							optional_get_vars = new Optional_get_vars(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public List<Data> data {get;set;} 
	public Links links {get;set;} 
	public Meta meta {get;set;} 

	public WSBatchAsociadoResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = arrayOfData(parser);
					} else if (text == 'links') {
						links = new Links(parser);
					} else if (text == 'meta') {
						meta = new Meta(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSBatchAsociadoResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Optional_get_vars {
		public List<Allowed_filters> sortBy {get;set;} 
		public List<String> sortOrder {get;set;} 

		public Optional_get_vars(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'sortBy') {
							sortBy = arrayOfAllowed_filters(parser);
						} else if (text == 'sortOrder') {
							sortOrder = arrayOfString(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Optional_get_vars consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Links {
		public String first {get;set;} 
		public String last {get;set;} 
		public String prev {get;set;} 
		public String next {get;set;} 

		public Links(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'first') {
							first = parser.getText();
						} else if (text == 'last') {
							last = parser.getText();
						} else if (text == 'prev') {
							prev = parser.getText();
						} else if (text == 'next') {
							next = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Links consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Data {
		public String rn {get;set;} 
		public String afi_id {get;set;} 
		public String afi_id_tit {get;set;} 
		public String entidad {get;set;} 
		public String codigo {get;set;} 
		public String apellidos {get;set;} 
		public String nombres {get;set;} 
		public String pam {get;set;} 
		public String tipo_afiliado {get;set;} 
		public String parentesco {get;set;} 
		public String tiene_alertas {get;set;} 
		public String estado {get;set;} 
		public String plan_codigo {get;set;} 
		public String plan_nombre {get;set;} 
		public String modelo_plan_codigo {get;set;} 
		public String modelo_plan_nombre {get;set;} 
		public String agencia_codigo {get;set;} 
		public String agencia_nombre {get;set;} 
		public String categoria_codigo {get;set;} 
		public String categoria_nombre {get;set;} 
		public String agrupacion_codigo {get;set;} 
		public String agrupacion_nombre {get;set;} 
		public String agrupacion1_codigo {get;set;} 
		public String agrupacion1_nombre {get;set;} 
		public String agrupacion2_codigo {get;set;} 
		public String agrupacion2_nombre {get;set;} 
		public String agrupacion3_codigo {get;set;} 
		public String agrupacion3_nombre {get;set;} 
		public String agrupacion4_codigo {get;set;} 
		public String agrupacion4_nombre {get;set;} 
		public String empresa_codigo {get;set;} 
		public String empresa_sucursal {get;set;} 
		public String empresa_nombre {get;set;} 
		public String empresa_sucursal_nombre {get;set;} 
		public String afiliacion {get;set;} 
		public String aporta {get;set;} 
		public String obra_social_codigo {get;set;} 
		public String obra_social_nombre {get;set;} 
		public String obra_social_ant_codigo {get;set;} 
		public String obra_social_ant_nombre {get;set;} 
		public String tipo_documento {get;set;} 
		public String numero_documento {get;set;} 
		public String sexo {get;set;} 
		public String fecha_nacimiento {get;set;} 
		public String edad {get;set;} 
		public String estado_civil {get;set;} 
		public String codigo_1 {get;set;} 
		public String gentilicio {get;set;} 
		public String actividad_codigo {get;set;} 
		public String actividad_nombre {get;set;} 
		public String titular_codigo {get;set;} 
		public String titular_apellidos {get;set;} 
		public String titular_nombres {get;set;} 
		public String antiguedad_reconocida {get;set;} 
		public String ultima_alta {get;set;} 
		public String fecha_alta_administrativa {get;set;} 
		public String fecha_alta {get;set;} 
		public String fecha_vigencia {get;set;} 
		public String cuit {get;set;} 
		public String sujeto_facturacion {get;set;} 
		public String adherente {get;set;} 
		public String tipo_baja_codigo {get;set;} 
		public String tipo_baja_nombre {get;set;} 
		public String motivo_de_baja {get;set;} 
		public String excedente {get;set;} 
		public String f_modif {get;set;} 
		public String entidad_codigo {get;set;} 
		public String full_name {get;set;}
		public String mail {get;set;}
		public String tipo_telefono {get;set;} 
		public String localidad {get;set;} 
		public String provincia {get;set;} 
		public String fecha_baja {get;set;}
		public String pais_codigo {get;set;} 
		public String es_menor {get;set;} 
		public String permanencia_desde {get;set;} 
		public String permanencia_hasta {get;set;} 
		public String adhiere_fe {get;set;}

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'rn') {
							rn = parser.getText();
						} else if (text == 'afi_id') {
							afi_id = String.valueOf(parser.getIntegerValue());
						} else if (text == 'afi_id_tit') {
							afi_id_tit = parser.getText();
						} else if (text == 'entidad') {
							entidad = parser.getText();
						} else if (text == 'codigo') {
							codigo = parser.getText();
						} else if (text == 'apellidos') {
							apellidos = parser.getText();
						} else if (text == 'nombres') {
							nombres = parser.getText();
						} else if (text == 'pam') {
							pam = parser.getText();
						} else if (text == 'tipo_afiliado') {
							tipo_afiliado = parser.getText();
						} else if (text == 'parentesco') {
							parentesco = parser.getText();
						} else if (text == 'tiene_alertas') {
							tiene_alertas = parser.getText();
						} else if (text == 'estado') {
							estado = parser.getText();
						} else if (text == 'plan_codigo') {
							plan_codigo = parser.getText();
						} else if (text == 'plan_nombre') {
							plan_nombre = parser.getText();
						} else if (text == 'modelo_plan_codigo') {
							modelo_plan_codigo = parser.getText();
						} else if (text == 'modelo_plan_nombre') {
							modelo_plan_nombre = parser.getText();
						} else if (text == 'agencia_codigo') {
							agencia_codigo = parser.getText();
						} else if (text == 'agencia_nombre') {
							agencia_nombre = parser.getText();
						} else if (text == 'categoria_codigo') {
							categoria_codigo = parser.getText();
						} else if (text == 'categoria_nombre') {
							categoria_nombre = parser.getText();
						} else if (text == 'agrupacion_codigo') {
							agrupacion_codigo = parser.getText();
						} else if (text == 'agrupacion_nombre') {
							agrupacion_nombre = parser.getText();
						} else if (text == 'agrupacion1_codigo') {
							agrupacion1_codigo = parser.getText();
						} else if (text == 'agrupacion1_nombre') {
							agrupacion1_nombre = parser.getText();
						} else if (text == 'agrupacion2_codigo') {
							agrupacion2_codigo = parser.getText();
						} else if (text == 'agrupacion2_nombre') {
							agrupacion2_nombre = parser.getText();
						} else if (text == 'agrupacion3_codigo') {
							agrupacion3_codigo = parser.getText();
						} else if (text == 'agrupacion3_nombre') {
							agrupacion3_nombre = parser.getText();
						} else if (text == 'agrupacion4_codigo') {
							agrupacion4_codigo = parser.getText();
						} else if (text == 'agrupacion4_nombre') {
							agrupacion4_nombre = parser.getText();
						} else if (text == 'empresa_codigo') {
							empresa_codigo = parser.getText();
						} else if (text == 'empresa_sucursal') {
							empresa_sucursal = parser.getText();
						} else if (text == 'empresa_nombre') {
							empresa_nombre = parser.getText();
						} else if (text == 'empresa_sucursal_nombre') {
							empresa_sucursal_nombre = parser.getText();
						} else if (text == 'afiliacion') {
							afiliacion = parser.getText();
						} else if (text == 'aporta') {
							aporta = parser.getText();
						} else if (text == 'obra_social_codigo') {
							obra_social_codigo = parser.getText();
						} else if (text == 'obra_social_nombre') {
							obra_social_nombre = parser.getText();
						} else if (text == 'obra_social_ant_codigo') {
							obra_social_ant_codigo = parser.getText();
						} else if (text == 'obra_social_ant_nombre') {
							obra_social_ant_nombre = parser.getText();
						} else if (text == 'tipo_documento') {
							tipo_documento = parser.getText();
						} else if (text == 'numero_documento') {
							numero_documento = parser.getText();
						} else if (text == 'sexo') {
							sexo = parser.getText();
						} else if (text == 'fecha_nacimiento') {
							fecha_nacimiento = parser.getText();
						} else if (text == 'edad') {
							edad = parser.getText();
						} else if (text == 'estado_civil') {
							estado_civil = parser.getText();
						} else if (text == 'codigo_1') {
							codigo_1 = parser.getText();
						} else if (text == 'gentilicio') {
							gentilicio = parser.getText();
						} else if (text == 'actividad_codigo') {
							actividad_codigo = parser.getText();
						} else if (text == 'actividad_nombre') {
							actividad_nombre = parser.getText();
						} else if (text == 'titular_codigo') {
							titular_codigo = parser.getText();
						} else if (text == 'titular_apellidos') {
							titular_apellidos = parser.getText();
						} else if (text == 'titular_nombres') {
							titular_nombres = parser.getText();
						} else if (text == 'antiguedad_reconocida') {
							antiguedad_reconocida = parser.getText();
						} else if (text == 'ultima_alta') {
							ultima_alta = parser.getText();
						} else if (text == 'fecha_alta_administrativa') {
							fecha_alta_administrativa = parser.getText();
						} else if (text == 'fecha_alta') {
							fecha_alta = parser.getText();
						} else if (text == 'fecha_vigencia') {
							fecha_vigencia = parser.getText();
						} else if (text == 'cuit') {
							cuit = parser.getText();
						} else if (text == 'sujeto_facturacion') {
							sujeto_facturacion = parser.getText();
						} else if (text == 'adherente') {
							adherente = parser.getText();
						} else if (text == 'tipo_baja_codigo') {
							tipo_baja_codigo = parser.getText();
						} else if (text == 'tipo_baja_nombre') {
							tipo_baja_nombre = parser.getText();
						} else if (text == 'motivo_de_baja') {
							motivo_de_baja = parser.getText();
						} else if (text == 'excedente') {
							excedente = parser.getText();
						} else if (text == 'f_modif') {
							f_modif = parser.getText();
						} else if (text == 'entidad_codigo') {
							entidad_codigo = parser.getText();
						} else if (text == 'full_name') {
							full_name = parser.getText();
						} else if (text == 'mail') {
							mail = parser.getText();
						} else if (text == 'tipo_telefono') {
							tipo_telefono = parser.getText();
						} else if (text == 'localidad') {
							localidad = parser.getText();
						} else if (text == 'provincia') {
							provincia = parser.getText();
						} else if (text == 'fecha_baja') {
							fecha_baja = parser.getText();
						} else if (text == 'pais_codigo') {
							pais_codigo = parser.getText();
						} else if (text == 'es_menor') {
							es_menor = parser.getText();
						} else if (text == 'permanencia_desde') {
							permanencia_desde = parser.getText();
						} else if (text == 'permanencia_hasta') {
							permanencia_hasta = parser.getText();
						} else if (text == 'adhiere_fe') {
							adhiere_fe = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Allowed_filters {

		public Allowed_filters(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Allowed_filters consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public static WSBatchAsociadoResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSBatchAsociadoResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}

    private static List<String> arrayOfString(System.JSONParser p) {
        List<String> res = new List<String>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(p.getText());
        }
        return res;
    }

    private static List<Allowed_filters> arrayOfAllowed_filters(System.JSONParser p) {
        List<Allowed_filters> res = new List<Allowed_filters>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Allowed_filters(p));
        }
        return res;
    }

    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }

}