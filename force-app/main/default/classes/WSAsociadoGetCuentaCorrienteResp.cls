//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSAsociadoGetCuentaCorrienteResp {

	public Data data {get;set;} 
	public Meta meta {get;set;} 

	public WSAsociadoGetCuentaCorrienteResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = new Data(parser);
					} else if (text == 'meta') {
						meta = new Meta(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSAsociadoGetCuentaCorrienteResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Meta {
		public List<Allowed_includes> allowed_includes {get;set;} 
		public List<Allowed_includes> default_includes {get;set;} 

		public Meta(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'allowed_includes') {
							allowed_includes = arrayOfAllowed_includes(parser);
						} else if (text == 'default_includes') {
							default_includes = arrayOfAllowed_includes(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Allowed_includes {

		public Allowed_includes(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Allowed_includes consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Empresa {
		public String cod_emp {get;set;} 
		public String descripcion {get;set;} 

		public Empresa(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'cod_emp') {
							cod_emp = parser.getText();
						} else if (text == 'descripcion') {
							descripcion = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Empresa consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class DetallesAfi {
		@AuraEnabled public String movimiento {get;set;} 
		@AuraEnabled public String comprobante {get;set;} 
		@AuraEnabled public String vencimiento {get;set;} 
		@AuraEnabled public String tipo {get;set;} 
		@AuraEnabled public String letra {get;set;} 
		@AuraEnabled public String sucursal {get;set;} 
		@AuraEnabled public String numero {get;set;} 
		@AuraEnabled public String cuota {get;set;} 
		@AuraEnabled public String aprobado {get;set;} 
		@AuraEnabled public String id {get;set;} 
		@AuraEnabled public String importe {get;set;} 
		@AuraEnabled public String saldo {get;set;} 

		public DetallesAfi() {
			movimiento = '';
			comprobante = '';
			vencimiento = '';
			tipo = '';
			letra = '';
			sucursal = '';
			numero = '';
			cuota = '';
			aprobado = '';
			id = '';
			importe = '';
			saldo = '';
		}

		public DetallesAfi(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'movimiento') {
							movimiento = parser.getText();
						} else if (text == 'comprobante') {
							comprobante = parser.getText();
						} else if (text == 'vencimiento') {
							vencimiento = parser.getText();
						} else if (text == 'tipo') {
							tipo = parser.getText();
						} else if (text == 'letra') {
							letra = parser.getText();
						} else if (text == 'sucursal') {
							sucursal = parser.getText();
						} else if (text == 'numero') {
							numero = parser.getText();
						} else if (text == 'cuota') {
							cuota = parser.getText();
						} else if (text == 'aprobado') {
							aprobado = parser.getText();
						} else if (text == 'id') {
							id = parser.getText();
						} else if (text == 'importe') {
							importe = parser.getText();
						} else if (text == 'saldo') {
							saldo = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'DetallesAfi consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Cuenta_corriente {
		public Afiliado afiliado {get;set;} 
		@AuraEnabled public List<DetallesAfi> detallesAfi {get;set;} 
		public List<Empresa> empresa {get;set;} 
		public List<DetallesAfi> detallesEmp {get;set;} 

		public Cuenta_corriente(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'afiliado') {
							afiliado = new Afiliado(parser);
						} else if (text == 'detallesAfi') {
							detallesAfi = arrayOfDetallesAfi(parser);
						} else if (text == 'empresa') {
							empresa = arrayOfEmpresa(parser);
						} else if (text == 'detallesEmp') {
							detallesEmp = arrayOfDetallesAfi(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Cuenta_corriente consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Data {
		@AuraEnabled public Cuenta_corriente cuenta_corriente {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'cuenta_corriente') {
							cuenta_corriente = new Cuenta_corriente(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Afiliado {
		public String cod_afi {get;set;} 
		public String nom_afi {get;set;} 
		public String medio_pago  {get;set;} 

		public Afiliado(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'cod_afi') {
							cod_afi = parser.getText();
						} else if (text == 'nom_afi') {
							nom_afi = parser.getText();
						} else if (text == 'medio_pago ') {
							medio_pago  = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Afiliado consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static WSAsociadoGetCuentaCorrienteResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSAsociadoGetCuentaCorrienteResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	



    private static List<DetallesAfi> arrayOfDetallesAfi(System.JSONParser p) {
        List<DetallesAfi> res = new List<DetallesAfi>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new DetallesAfi(p));
        }
        return res;
    }


    private static List<Empresa> arrayOfEmpresa(System.JSONParser p) {
        List<Empresa> res = new List<Empresa>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Empresa(p));
        }
        return res;
    }




    private static List<Allowed_includes> arrayOfAllowed_includes(System.JSONParser p) {
        List<Allowed_includes> res = new List<Allowed_includes>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Allowed_includes(p));
        }
        return res;
    }






}