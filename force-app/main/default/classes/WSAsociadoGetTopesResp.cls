//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
public class WSAsociadoGetTopesResp {

	public List<Data> data {get;set;} 

	public WSAsociadoGetTopesResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = arrayOfData(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSAsociadoGetTopesResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Data {
		@AuraEnabled public String rubro_tope {get;set;} 
		@AuraEnabled public String tope {get;set;} 
		@AuraEnabled public String clausula {get;set;} 
		@AuraEnabled public String valor_tope {get;set;} 
		@AuraEnabled public String consumo {get;set;} 
		@AuraEnabled public String remanente {get;set;}
		@AuraEnabled public String valor_red {get;set;}
		@AuraEnabled public String remanente_red {get;set;}
		@AuraEnabled public String nombre_red {get;set;}
		public String contexto {get;set;}
		public String sistema {get;set;}
		public String aplicacion {get;set;}
		public String tipo_valor {get;set;}
		public String periodo {get;set;}
		public String base_calculo_2 {get;set;}
		@AuraEnabled public String tocmpc_id {get;set;}
		public String tocpc_id {get;set;}
		public String afi_id {get;set;}
		public String fecha {get;set;}
		public String codi_claus {get;set;}
		@AuraEnabled public String tope_id {get;set;}

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'rubro_tope') {
							rubro_tope = parser.getText();
						} else if (text == 'tope') {
							tope = parser.getText();
						} else if (text == 'clausula') {
							clausula = parser.getText();
						} else if (text == 'valor_tope') {
							valor_tope = parser.getText();
						} else if (text == 'consumo') {
							consumo = parser.getText();
						} else if (text == 'remanente') {
							remanente = parser.getText();
						} else if (text == 'valor_red') {
							valor_red = parser.getText();
						} else if (text == 'remanente_red') {
							remanente_red = parser.getText();
						} else if (text == 'nombre_red') {
							nombre_red = parser.getText();
						} else if (text == 'contexto') {
							contexto = parser.getText();
						} else if (text == 'sistema') {
							sistema = parser.getText();
						} else if (text == 'aplicacion') {
							aplicacion = parser.getText();
						} else if (text == 'tipo_valor') {
							tipo_valor = parser.getText();
						} else if (text == 'periodo') {
							periodo = parser.getText();
						} else if (text == 'base_calculo_2') {
							base_calculo_2 = parser.getText();
						} else if (text == 'tocmpc_id') {
							tocmpc_id = parser.getText();
						} else if (text == 'tocpc_id') {
							tocpc_id = parser.getText();
						} else if (text == 'afi_id') {
							afi_id = parser.getText();
						} else if (text == 'fecha') {
							fecha = parser.getText();
						} else if (text == 'codi_claus') {
							codi_claus = parser.getText();
						} else if (text == 'tope_id') {
							tope_id = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}

		}
	}
	
	public static WSAsociadoGetTopesResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSAsociadoGetTopesResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	
    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
			Data nData = new Data(p);
            res.add(nData);
        }
        return res;
    }
}