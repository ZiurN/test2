//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSCaseValoracionResp {

	public class Meta {
		public List<Allowed_includes> allowed_includes {get;set;} 
		public List<Allowed_includes> default_includes {get;set;} 

		public Meta(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'allowed_includes') {
							allowed_includes = arrayOfAllowed_includes(parser);
						} else if (text == 'default_includes') {
							default_includes = arrayOfAllowed_includes(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Allowed_includes {

		public Allowed_includes(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Allowed_includes consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public Object message {get;set;} 
	public List<Data> data {get;set;} 
	public Meta meta {get;set;} 

	public WSCaseValoracionResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'message') {
						message = parser.readValueAs(Object.class);
					} else if (text == 'data') {
						data = arrayOfData(parser);
					} else if (text == 'meta') {
						meta = new Meta(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSCaseValoracionResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Data {
		public String Tcc_Codigo {get;set;} 
		public String Importe {get;set;} 
		public String Cantidad {get;set;} 
		public String Coeficiente {get;set;} 
		public String Coeficiente_General {get;set;} 
		public String Cga_Codigo {get;set;} 
		public String Rcg_Codigo {get;set;} 
		public String Dca_Dca_Id {get;set;} 
		public String Dca_Dca_Id_Ajuste {get;set;} 
		public String Nombre_Clausula {get;set;} 
		public String Nombre_Cat_Grupal {get;set;} 
		public String Nombre_Regla_Adic {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'Tcc_Codigo') {
							Tcc_Codigo = parser.getText();
						} else if (text == 'Importe') {
							Importe = parser.getText();
						} else if (text == 'Cantidad') {
							Cantidad = parser.getText();
						} else if (text == 'Coeficiente') {
							Coeficiente = parser.getText();
						} else if (text == 'Coeficiente_General') {
							Coeficiente_General = parser.getText();
						} else if (text == 'Cga_Codigo') {
							Cga_Codigo = parser.getText();
						} else if (text == 'Rcg_Codigo') {
							Rcg_Codigo = parser.getText();
						} else if (text == 'Dca_Dca_Id') {
							Dca_Dca_Id = parser.getText();
						} else if (text == 'Dca_Dca_Id_Ajuste') {
							Dca_Dca_Id_Ajuste = parser.getText();
						} else if (text == 'Nombre_Clausula') {
							Nombre_Clausula = parser.getText();
						} else if (text == 'Nombre_Cat_Grupal') {
							Nombre_Cat_Grupal = parser.getText();
						} else if (text == 'Nombre_Regla_Adic') {
							Nombre_Regla_Adic = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static WSCaseValoracionResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSCaseValoracionResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	




    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }



    private static List<Allowed_includes> arrayOfAllowed_includes(System.JSONParser p) {
        List<Allowed_includes> res = new List<Allowed_includes>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Allowed_includes(p));
        }
        return res;
    }



}