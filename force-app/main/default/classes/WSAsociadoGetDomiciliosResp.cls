//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class WSAsociadoGetDomiciliosResp {

	public List<Data> data {get;set;} 

	public WSAsociadoGetDomiciliosResp(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = arrayOfData(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'WSAsociadoGetDomiciliosResp consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Telefonos {
		@AuraEnabled public String tipo_telefono {get;set;} 
		@AuraEnabled public String numero {get;set;} 
		//Agregado--------------------------------------------------
		@AuraEnabled public String telemp_id {get;set;} 
		@AuraEnabled public String tipo {get;set;} 
		@AuraEnabled public String id {get;set;} 
		//----------------------------------------------------------

		public Telefonos(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'tipo_telefono') {
							tipo_telefono = parser.getText();
						} else if (text == 'numero') {
							numero = parser.getText();
						// Agregado ---------------------------------
						} else if (text == 'telemp_id') {
							telemp_id = parser.getText();
						} else if (text == 'tipo') {
							tipo = parser.getText();
						} else if (text == 'id') {
							id = parser.getText();
						//-------------------------------------------
						} else {
							System.debug(LoggingLevel.WARN, 'Telefonos consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Data {
		public String id_domicilio {get;set;} 
		@AuraEnabled public String tipo_domicilio {get;set;} 
		@AuraEnabled public String calle {get;set;} 
		@AuraEnabled public String piso {get;set;} 
		@AuraEnabled public String dpto {get;set;} 
		@AuraEnabled public String numero {get;set;}
		@AuraEnabled public String observaciones {get;set;}
		@AuraEnabled public String codigo_postal {get;set;} 
		@AuraEnabled public String localidad {get;set;} 
		@AuraEnabled public String provincia {get;set;} 
		@AuraEnabled public String pais {get;set;} 
		@AuraEnabled public List<Telefonos> telefonos {get;set;} 
		// Atributos agregados ---------------------------------------
		//@AuraEnabled public String domiemp_id {get;set;} 
		//@AuraEnabled public String id {get;set;} 
		//@AuraEnabled public String efector {get;set;} 
		//@AuraEnabled public String nombre_efector {get;set;} 
		@AuraEnabled public String domicilio_efector {get;set;} 
		//@AuraEnabled public String codigo_povincia {get;set;} 
		//@AuraEnabled public String desc_domicilio {get;set;} 
		//@AuraEnabled public String domiefe_id {get;set;}
		@AuraEnabled public String domicilio {get;set;}
		 
		//------------------------------------------------------------
		
		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'id_domicilio') {
							id_domicilio = parser.getText();
						} else if (text == 'tipo_domicilio') {
							tipo_domicilio = parser.getText();
						} else if (text == 'calle') {
							calle = parser.getText();
						} else if (text == 'piso') {
							piso = parser.getText();
						} else if (text == 'dpto') {
							dpto = parser.getText();
						} else if (text == 'numero') {
							numero = parser.getText();
						} else if (text == 'codigo_postal') {
							codigo_postal = parser.getText();
						} else if (text == 'observaciones') {						
							observaciones = parser.getText();
						} else if (text == 'localidad') {						
							localidad = parser.getText();
						} else if (text == 'provincia') {
							provincia = parser.getText();
						} else if (text == 'pais') {
							pais = parser.getText();
						//-------------- Agregado --------------
						//} else if (text == 'domiemp_id') {
						//	domiemp_id = parser.getText();
						//} else if (text == 'id') {
						//	id = parser.getText();
						//} else if (text == 'efector') {
						//	efector = parser.getText();
						//} else if (text == 'nombre_efector') {
						//	nombre_efector = parser.getText();
						} else if (text == 'domicilio_efector') {
							domicilio_efector = parser.getText();
						//} else if (text == 'codigo_povincia') {
						//	codigo_povincia = parser.getText();
						//} else if (text == 'desc_domicilio') {
						//	desc_domicilio = parser.getText();
						//} else if (text == 'domiefe_id') {
						//	domiefe_id = parser.getText();
						} else if (text == 'domicilio') {
							domicilio = parser.getText();
						//--------------------------------------
						} else if (text == 'telefonos') {
							telefonos = arrayOfTelefonos(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public static WSAsociadoGetDomiciliosResp parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new WSAsociadoGetDomiciliosResp(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}

    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }

    private static List<Telefonos> arrayOfTelefonos(System.JSONParser p) {
        List<Telefonos> res = new List<Telefonos>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Telefonos(p));
        }
        return res;
    }

}